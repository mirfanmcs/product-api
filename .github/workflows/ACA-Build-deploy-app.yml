#This workflow will deploy application in Azure Container App. Every deploy will create new revision.
name: Build and Deploy Azure Container App

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]
    paths:
      - 'src/main/java/com/irfanstore/product/**'
      
  # Allow mannually trigger 
  workflow_dispatch:      

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2
        
      - name: Build Solution
        run: mvn package
        
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Build and Push image to Azure Container Registry
        run:  az acr build --registry ${{ secrets.ACR_NAME }} --image ${{ secrets.APP_NAME }}:${{ github.sha }} .
  Deploy:  
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}    
       
#-------------------------- Deploy Using Az CLI ------------------------------------------------------------------------

#       - name: Setup Container App CLI Plugin
#         run: az extension add --name containerapp --upgrade
         
#       - name: AZ Config Set Extension
#         run: az config set extension.use_dynamic_install=yes_without_prompt
        
#       - name: Update Container Image
#         run: az containerapp update -n ${{ secrets.APP_NAME }} -g ${{ secrets.RESOURCE_GROUP }} --image ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.APP_NAME }}:${{ github.sha }}
      
#      #  Updating container image creates new revision. ACA transfer 100% traffic to new revision which is not ideal for Blue/Green deployment. 
#      #  We need to set 0% traffic on new revision and 100% on previous revision
      
#       - name: Swith Traffic to 0% on latest revesion for Blue/Green testing
#         run: |
#               REV_COUNT=$(az containerapp revision list --name ${{ secrets.APP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }} --query "length([])")
#               PREV_REV_INDEX="$((REV_COUNT-2))"
#               PREV_REV_NAME=$(az containerapp revision list --name ${{ secrets.APP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }} --query "[].{Name:name}[$PREV_REV_INDEX].Name")
#               PREV_REV_NAME=$(sed -e 's/^"//' -e 's/"$//' <<<"$PREV_REV_NAME")
#               az containerapp ingress traffic set -n ${{ secrets.APP_NAME }} -g ${{ secrets.RESOURCE_GROUP }} --revision-weight latest=0 $PREV_REV_NAME=100


#------------------------------------------------------------------------------------------------------------------------------
     
#------------------------------ Deploy using Bicep ----------------------------------------------------------------------------
      - name: Checkout to the branch
        uses: actions/checkout@v2
      
      - name: Setup Container App CLI Plugin
        run: az extension add --name containerapp --upgrade
         
      - name: AZ Config Set Extension
        run: az config set extension.use_dynamic_install=yes_without_prompt

      - name: Deploy Bicep
        run: |
                REV_COUNT=$(az containerapp revision list --name ${{ secrets.APP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }} --query "length([])")
                PREV_REV_INDEX="$((REV_COUNT-2))"
                PREV_REV_NAME=$(az containerapp revision list --name ${{ secrets.APP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }} --query "[].{Name:name}[$PREV_REV_INDEX].Name")
                PREV_REV_NAME=$(sed -e 's/^"//' -e 's/"$//' <<<"$PREV_REV_NAME")
                echo $PREV_REV_NAME
                ACR_USERNAME=$(az acr credential show -n ${{ secrets.ACR_NAME }} --query username)
                ACR_USERNAME=$(sed -e 's/^"//' -e 's/"$//' <<<"$ACR_USERNAME")
                ACR_PASSWORD=$(az acr credential show -n ${{ secrets.ACR_NAME }} --query  passwords[0].value)
                ACR_PASSWORD=$(sed -e 's/^"//' -e 's/"$//' <<<"$ACR_PASSWORD")                         
                az deployment group create -g ${{ secrets.RESOURCE_GROUP }} -f ./deploy/bicep-external/main.bicep --parameters \
                containerImage='${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.APP_NAME }}:${{ github.sha }}' \
                registryName='${{ secrets.ACR_NAME }}.azurecr.io' \
                registryUsername=$ACR_USERNAME \
                registryPassword=$ACR_PASSWORD \ 
                previousRevision=$PREV_REV_NAME 
                
                
          
#------------------------------------------------------------------------------------------------------------------------------
                
            
        
       
